name: version

on:
  workflow_call: # https://docs.github.com/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow
    outputs:
      short_sha:
        description: 'version short hash of the commit size 8'
        value: ${{ jobs.version-check.outputs.short_sha }}
      sha:
        description: 'version short hash of the commit'
        value: ${{ jobs.version-check.outputs.sha }}
      tag_name:
        description: 'tag name, if not tag will null'
        value: ${{ jobs.version-check.outputs.tag_name }}
      cc_version:
        description: 'conventional version'
        value: ${{ jobs.version-check.outputs.cc_version }}
      cc_date:
        description: 'conventional date'
        value: ${{ jobs.version-check.outputs.cc_date }}
      cc_changes:
        description: 'conventional change logs'
        value: ${{ jobs.version-check.outputs.cc_changes }}
      cc_status:
        description: 'conventional change status, released or prereleased'
        value: ${{ jobs.version-check.outputs.cc_status }}


jobs:
  version-check:
    name: version-check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    outputs:
      short_sha: ${{ steps.check-version.outputs.short-sha }}
      sha: ${{ steps.check-version.outputs.sha }}
      tag_name: ${{ steps.check-version.outputs.tag-version }}
      cc_version: ${{ steps.check-version.outputs.cc-latest-version }}
      cc_date: ${{ steps.check-version.outputs.cc-latest-date }}
      cc_changes: ${{ steps.check-version.outputs.cc-latest-changes-log }}
      cc_status: ${{ steps.check-version.outputs.cc-latest-status }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: print args
        run: |
          echo " CI ${CI}"
          echo " GITHUB_ACTIONS ${GITHUB_ACTIONS}"
          echo " GITHUB_ACTION ${GITHUB_ACTION}"
          echo " RUNNER_DEBUG ${RUNNER_DEBUG}"
          echo " RUNNER_OS ${RUNNER_OS}"
          echo " runner.os ${{ runner.os }}"
          echo " RUNNER_ARCH ${RUNNER_ARCH}"
          echo ""
          echo " GITHUB_JOB ${GITHUB_JOB}"
          echo " GITHUB_EVENT_NAME ${GITHUB_EVENT_NAME}"
          echo " github.event_name ${{ github.event_name }}"
          echo " github.event.pusher.name ${{ github.event.pusher.name }}"
          echo " github.event.pusher.email ${{ github.event.pusher.email }}"
          echo " github.event.sender.name ${{ github.event.sender.name }}"
          echo " github.event.sender.email ${{ github.event.sender.email }}"
          echo ""
          echo " GITHUB_SHA ${GITHUB_SHA}"
          echo " GITHUB_REF_TYPE ${GITHUB_REF_TYPE}"
          echo " GITHUB_REF ${GITHUB_REF}"
          echo " github.ref ${{ github.ref }}"
          echo " GITHUB_REF_NAME ${GITHUB_REF_NAME}"
          echo " GITHUB_BASE_REF ${GITHUB_BASE_REF}"
          echo " github.base_ref ${{ github.base_ref }}"
          echo " GITHUB_HEAD_REF ${GITHUB_HEAD_REF}"
          echo " github.head_ref ${{ github.head_ref }}"
          echo ""
          echo " github.event.pull_request.title ${{ github.event.pull_request.title }}"
          echo " github.event.pull_request.state ${{ github.event.pull_request.state }}"
          echo " github.event.pull_request.merged ${{ github.event.pull_request.merged }}"
          echo " github.event.pull_request.base.sha main ${{ github.event.pull_request.base.sha || 'main' }}"
          echo " github.event.pull_request.head.sha github.ref ${{ github.event.pull_request.head.sha || github.ref }}"
          echo ""
          echo " GITHUB_REPOSITORY ${GITHUB_REPOSITORY}"
          echo " GITHUB_REPOSITORY_OWNER ${GITHUB_REPOSITORY_OWNER}"

      - name: get version and conventional
        id: check-version
        uses: convention-change/conventional-version-check@v1.2.0 # or change to latest version
        with:
          sha-length: 8

      - name: check version and conventional
        run: |
          echo "sha: ${{ steps.check-version.outputs.sha }}"
          echo "env SHA-SHORT: ${{ env.SHA-SHORT }}"
          echo "short-sha: ${{ steps.check-version.outputs.short-sha }}"
          echo "tag-version: ${{ steps.check-version.outputs.tag-version }}"
          echo "env GIT_TAG_VERSION: ${{ env.GIT_TAG_VERSION }}"
          echo "cc-latest-version: ${{ steps.check-version.outputs.cc-latest-version }}"
          echo "cc-latest-date: ${{ steps.check-version.outputs.cc-latest-date }}"
          echo "cc-latest-status: ${{ steps.check-version.outputs.cc-latest-status }}"
          echo "cc-latest-changes-log: ${{ steps.check-version.outputs.cc-latest-changes-log }}"